<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanxu.mapper.BabyFoodMapper">
  <resultMap id="BaseResultMap" type="com.hanxu.entity.BabyFood">
    <!--@mbg.generated-->
    <!--@Table t_baby_food-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="food_name" jdbcType="VARCHAR" property="foodName" />
    <result column="mixed" jdbcType="VARCHAR" property="mixed" />
    <result column="net_content" jdbcType="VARCHAR" property="netContent" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <result column="quality_time" jdbcType="VARCHAR" property="qualityTime" />
    <result column="storage" jdbcType="VARCHAR" property="storage" />
    <result column="eat_method" jdbcType="VARCHAR" property="eatMethod" />
    <result column="foodType" jdbcType="VARCHAR" property="foodtype" />
    <result column="foodpic" jdbcType="VARCHAR" property="foodpic" />
    <result column="isdelete" jdbcType="VARCHAR" property="isdelete" />
    <result column="food_price" jdbcType="INTEGER" property="foodPrice" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, food_name, mixed, net_content, origin, quality_time, `storage`, eat_method, foodType, 
    foodpic, isdelete, food_price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_baby_food
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_baby_food
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hanxu.entity.BabyFood" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_baby_food (food_name, mixed, net_content, 
      origin, quality_time, `storage`, 
      eat_method, foodType, foodpic, 
      isdelete, food_price)
    values (#{foodName,jdbcType=VARCHAR}, #{mixed,jdbcType=VARCHAR}, #{netContent,jdbcType=VARCHAR}, 
      #{origin,jdbcType=VARCHAR}, #{qualityTime,jdbcType=VARCHAR}, #{storage,jdbcType=VARCHAR}, 
      #{eatMethod,jdbcType=VARCHAR}, #{foodtype,jdbcType=VARCHAR}, #{foodpic,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=VARCHAR}, #{foodPrice,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id"  keyProperty="id" parameterType="com.hanxu.entity.BabyFood" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_baby_food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="foodName != null">
        food_name,
      </if>
      <if test="mixed != null">
        mixed,
      </if>
      <if test="netContent != null">
        net_content,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="qualityTime != null">
        quality_time,
      </if>
      <if test="storage != null">
        `storage`,
      </if>
      <if test="eatMethod != null">
        eat_method,
      </if>
      <if test="foodtype != null">
        foodType,
      </if>
      <if test="foodpic != null">
        foodpic,
      </if>
      <if test="isdelete != null">
        isdelete,
      </if>
      <if test="foodPrice != null">
        food_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="foodName != null">
        #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="mixed != null">
        #{mixed,jdbcType=VARCHAR},
      </if>
      <if test="netContent != null">
        #{netContent,jdbcType=VARCHAR},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="qualityTime != null">
        #{qualityTime,jdbcType=VARCHAR},
      </if>
      <if test="storage != null">
        #{storage,jdbcType=VARCHAR},
      </if>
      <if test="eatMethod != null">
        #{eatMethod,jdbcType=VARCHAR},
      </if>
      <if test="foodtype != null">
        #{foodtype,jdbcType=VARCHAR},
      </if>
      <if test="foodpic != null">
        #{foodpic,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=VARCHAR},
      </if>
      <if test="foodPrice != null">
        #{foodPrice,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanxu.entity.BabyFood">
    <!--@mbg.generated-->
    update t_baby_food
    <set>
      <if test="foodName != null">
        food_name = #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="mixed != null">
        mixed = #{mixed,jdbcType=VARCHAR},
      </if>
      <if test="netContent != null">
        net_content = #{netContent,jdbcType=VARCHAR},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="qualityTime != null">
        quality_time = #{qualityTime,jdbcType=VARCHAR},
      </if>
      <if test="storage != null">
        `storage` = #{storage,jdbcType=VARCHAR},
      </if>
      <if test="eatMethod != null">
        eat_method = #{eatMethod,jdbcType=VARCHAR},
      </if>
      <if test="foodtype != null">
        foodType = #{foodtype,jdbcType=VARCHAR},
      </if>
      <if test="foodpic != null">
        foodpic = #{foodpic,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        isdelete = #{isdelete,jdbcType=VARCHAR},
      </if>
      <if test="foodPrice != null">
        food_price = #{foodPrice,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanxu.entity.BabyFood">
    <!--@mbg.generated-->
    update t_baby_food
    set food_name = #{foodName,jdbcType=VARCHAR},
      mixed = #{mixed,jdbcType=VARCHAR},
      net_content = #{netContent,jdbcType=VARCHAR},
      origin = #{origin,jdbcType=VARCHAR},
      quality_time = #{qualityTime,jdbcType=VARCHAR},
      `storage` = #{storage,jdbcType=VARCHAR},
      eat_method = #{eatMethod,jdbcType=VARCHAR},
      foodType = #{foodtype,jdbcType=VARCHAR},
      foodpic = #{foodpic,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=VARCHAR},
      food_price = #{foodPrice,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getList" resultMap="BaseResultMap">
    select * from t_baby_food where isdelete=0
  </select>

  <update id="del" parameterType="int">
    update t_baby_food set isdelete="1" where id=#{id}
  </update>

  <select id="getListByType" parameterType="string" resultMap="BaseResultMap">
    select * from t_baby_food where foodType=#{strType}
  </select>

  <select id="getListByName" parameterType="string" resultMap="BaseResultMap">
    select * from t_baby_food where food_name like concat('%',#{foodName},'%')
  </select>
</mapper>